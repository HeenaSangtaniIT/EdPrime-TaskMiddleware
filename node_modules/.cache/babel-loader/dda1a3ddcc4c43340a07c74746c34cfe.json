{"ast":null,"code":"import { applyMiddleware, compose, createStore } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport createSagaMiddleware from \"redux-saga\";\nimport storage from \"redux-persist/lib/storage\";\nimport cardSagas from \"./card/card.saga\";\nimport reducers from \"./redux/reducers\";\nconst persistentKey = {\n  key: \"techtask\",\n  storage\n};\nconst persistentReducer = persistReducer(persistentKey, reducers);\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\nexport function configureStore(initialState) {\n  const storeConfiguration = createStore(persistentReducer, initialState, compose(applyMiddleware(...middlewares)));\n  let persistentStore = persistStore(storeConfiguration);\n  sagaMiddleware.run(cardSagas);\n  return {\n    storeConfiguration,\n    persistentStore\n  };\n}","map":{"version":3,"sources":["/Users/banshi/Documents/techTask/techtask/src/configureStore.js"],"names":["applyMiddleware","compose","createStore","persistStore","persistReducer","createSagaMiddleware","storage","cardSagas","reducers","persistentKey","key","persistentReducer","sagaMiddleware","middlewares","configureStore","initialState","storeConfiguration","persistentStore","run"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,OAAzB,EAAkCC,WAAlC,QAAoD,OAApD;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,UADa;AAElBJ,EAAAA;AAFkB,CAAtB;AAKA,MAAMK,iBAAiB,GAAGP,cAAc,CAACK,aAAD,EAAeD,QAAf,CAAxC;AACA,MAAMI,cAAc,GAAGP,oBAAoB,EAA3C;AACA,MAAMQ,WAAW,GAAG,CAACD,cAAD,CAApB;AACA,OAAO,SAASE,cAAT,CAAwBC,YAAxB,EAAqC;AACxC,QAAMC,kBAAkB,GAAGd,WAAW,CAACS,iBAAD,EAAmBI,YAAnB,EAAgCd,OAAO,CAACD,eAAe,CAAC,GAAGa,WAAJ,CAAhB,CAAvC,CAAtC;AACA,MAAII,eAAe,GAAGd,YAAY,CAACa,kBAAD,CAAlC;AACAJ,EAAAA,cAAc,CAACM,GAAf,CAAmBX,SAAnB;AACA,SAAM;AAACS,IAAAA,kBAAD;AAAqBC,IAAAA;AAArB,GAAN;AACH","sourcesContent":["import {applyMiddleware, compose, createStore} from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport createSagaMiddleware from \"redux-saga\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport cardSagas from \"./card/card.saga\";\nimport reducers from \"./redux/reducers\";\n\nconst persistentKey = {\n    key: \"techtask\",\n    storage,\n}\n\nconst persistentReducer = persistReducer(persistentKey,reducers)\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware]\nexport function configureStore(initialState){\n    const storeConfiguration = createStore(persistentReducer,initialState,compose(applyMiddleware(...middlewares)))\n    let persistentStore = persistStore(storeConfiguration);\n    sagaMiddleware.run(cardSagas);\n    return{storeConfiguration, persistentStore};\n}"]},"metadata":{},"sourceType":"module"}