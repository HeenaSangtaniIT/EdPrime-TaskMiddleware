{"ast":null,"code":"import axios from 'axios'; // Card Interceptor\n\nexport const apiRootCardaxios = axios.create({\n  baseURL: \"\",\n  timeout: 10000,\n  params: {},\n  headers: {\n    appversion: \"7.3\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Access-Control-Allow-Headers\": \"*\"\n  }\n});\n\nconst apiRootCardaxiosInterceptor = () => {\n  apiRootCardaxios.interceptors.request.use(config => {\n    // Do something before request is sent\n    config.params = { ...config.params\n    };\n    return config;\n  }, function (error) {\n    // Do something with request error\n    return Promise.reject(error);\n  });\n};\n\napiRootCardaxiosInterceptor();","map":{"version":3,"sources":["/Users/banshi/Documents/techTask/techtask/src/common/axios.js"],"names":["axios","apiRootCardaxios","create","baseURL","timeout","params","headers","appversion","apiRootCardaxiosInterceptor","interceptors","request","use","config","error","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,gBAAgB,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC3CC,EAAAA,OAAO,EAAE,EADkC;AAE3CC,EAAAA,OAAO,EAAE,KAFkC;AAG3CC,EAAAA,MAAM,EAAE,EAHmC;AAI3CC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAE,KADL;AAEP,mCAA+B,GAFxB;AAGP,oCAAgC;AAHzB;AAJkC,CAAb,CAAzB;;AAUP,MAAMC,2BAA2B,GAAG,MAAM;AACxCP,EAAAA,gBAAgB,CAACQ,YAAjB,CAA8BC,OAA9B,CAAsCC,GAAtC,CAA0CC,MAAM,IAAI;AAClD;AACAA,IAAAA,MAAM,CAACP,MAAP,GAAgB,EAAE,GAAGO,MAAM,CAACP;AAAZ,KAAhB;AACA,WAAOO,MAAP;AACD,GAJD,EAIG,UAAUC,KAAV,EAAiB;AAClB;AACA,WAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,GAPD;AAQD,CATD;;AAYAL,2BAA2B","sourcesContent":["import axios from 'axios';\n\n// Card Interceptor\nexport const apiRootCardaxios = axios.create({\n  baseURL: \"\",\n  timeout: 10000,\n  params: {},\n  headers: {\n    appversion: \"7.3\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Access-Control-Allow-Headers\": \"*\"\n  }\n})\nconst apiRootCardaxiosInterceptor = () => {\n  apiRootCardaxios.interceptors.request.use(config => {\n    // Do something before request is sent\n    config.params = { ...config.params }\n    return config;\n  }, function (error) {\n    // Do something with request error\n    return Promise.reject(error);\n  });\n}\n\n\napiRootCardaxiosInterceptor();"]},"metadata":{},"sourceType":"module"}