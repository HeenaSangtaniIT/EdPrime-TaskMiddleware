{"ast":null,"code":"import { applyMiddleware, compose, createStore } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport createSagaMiddleware from \"redux-saga\";\nimport storage from \"redux-persist/lib/storage\";\nimport cardSagas from \"./card/card.saga\";\nimport reducers from \"./redux/reducers\";\nimport { loadState, saveState } from './common/localStorage';\nimport { loggerMiddleware } from './redux/middleware/logger-middleware';\nimport _ from \"lodash\";\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const persistStore = loadState();\n  const composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const store = createStore(reducers, persistStore, composeEnhancer(applyMiddleware(sagaMiddleware, loggerMiddleware)));\n  sagaMiddleware.run(cardSagas);\n  store.subscribe(_.throttle(() => {\n    saveState(store.getState());\n  }, 1000));\n  return store;\n};\n\nexport default configureStore;","map":{"version":3,"sources":["/Users/banshi/Documents/techTask/techtask/src/configureStore.js"],"names":["applyMiddleware","compose","createStore","persistStore","persistReducer","createSagaMiddleware","storage","cardSagas","reducers","loadState","saveState","loggerMiddleware","_","configureStore","sagaMiddleware","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","run","subscribe","throttle","getState"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,OAAzB,EAAkCC,WAAlC,QAAoD,OAApD;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAEA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,uBAArC;AACA,SAASC,gBAAT,QAAiC,sCAAjC;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAMC,cAAc,GAAGT,oBAAoB,EAA3C;AACA,QAAMF,YAAY,GAAGM,SAAS,EAA9B;AACA,QAAMM,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+ChB,OAAvE;AACA,QAAMiB,KAAK,GAAGhB,WAAW,CAACM,QAAD,EAAWL,YAAX,EAAyBY,eAAe,CAACf,eAAe,CAACc,cAAD,EAAiBH,gBAAjB,CAAhB,CAAxC,CAAzB;AAEAG,EAAAA,cAAc,CAACK,GAAf,CAAmBZ,SAAnB;AAEAW,EAAAA,KAAK,CAACE,SAAN,CAAgBR,CAAC,CAACS,QAAF,CAAW,MAAM;AAC7BX,IAAAA,SAAS,CAACQ,KAAK,CAACI,QAAN,EAAD,CAAT;AACH,GAFe,EAEb,IAFa,CAAhB;AAIA,SAAOJ,KAAP;AAEH,CAdD;;AAeA,eAAeL,cAAf","sourcesContent":["import {applyMiddleware, compose, createStore} from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport createSagaMiddleware from \"redux-saga\";\nimport storage from \"redux-persist/lib/storage\";\nimport cardSagas from \"./card/card.saga\";\nimport reducers from \"./redux/reducers\";\n\nimport { loadState, saveState } from './common/localStorage';\nimport { loggerMiddleware } from './redux/middleware/logger-middleware';\nimport _ from \"lodash\";\n\nconst configureStore = () => {\n    const sagaMiddleware = createSagaMiddleware();\n    const persistStore = loadState();\n    const composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    const store = createStore(reducers, persistStore, composeEnhancer(applyMiddleware(sagaMiddleware, loggerMiddleware)))\n\n    sagaMiddleware.run(cardSagas);\n\n    store.subscribe(_.throttle(() => {\n        saveState(store.getState());\n    }, 1000))\n\n    return store;\n\n}\nexport default configureStore;"]},"metadata":{},"sourceType":"module"}